# Generated by Django 4.2.7 on 2025-05-08 18:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('fbref_id', models.CharField(blank=True, help_text='FBRef ID for the league if available', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='E.g., 2023-2024', max_length=9, unique=True)),
                ('fbref_id', models.CharField(blank=True, help_text='FBRef ID for the season if available', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('fbref_id', models.CharField(blank=True, help_text='FBRef ID for the team', max_length=50, null=True, unique=True)),
                ('current_league', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_teams', to='football_data.league')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('fbref_id', models.CharField(help_text='FBRef ID for the player', max_length=50, unique=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('primary_position', models.CharField(blank=True, max_length=50, null=True)),
                ('current_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='players', to='football_data.team')),
            ],
            options={
                'unique_together': {('name', 'fbref_id')},
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_date', models.DateTimeField()),
                ('home_score', models.PositiveIntegerField(blank=True, null=True)),
                ('away_score', models.PositiveIntegerField(blank=True, null=True)),
                ('home_xg', models.FloatField(blank=True, help_text='Expected Goals Home', null=True)),
                ('away_xg', models.FloatField(blank=True, help_text='Expected Goals Away', null=True)),
                ('venue', models.CharField(blank=True, max_length=150, null=True)),
                ('referee', models.CharField(blank=True, max_length=100, null=True)),
                ('fbref_match_id', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='football_data.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='football_data.team')),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='football_data.league')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='football_data.season')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='TeamStandardStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals_for', models.PositiveIntegerField(default=0)),
                ('goals_against', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('xg_for', models.FloatField(blank=True, null=True)),
                ('xg_against', models.FloatField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.league')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('team', 'season', 'league')},
            },
        ),
        migrations.CreateModel(
            name='PlayerStandardStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_played', models.PositiveIntegerField(default=0)),
                ('starts', models.PositiveIntegerField(default=0)),
                ('minutes_played', models.PositiveIntegerField(default=0)),
                ('goals', models.PositiveIntegerField(default=0)),
                ('assists', models.PositiveIntegerField(default=0)),
                ('penalty_goals', models.PositiveIntegerField(default=0)),
                ('penalty_attempts', models.PositiveIntegerField(default=0)),
                ('yellow_cards', models.PositiveIntegerField(default=0)),
                ('red_cards', models.PositiveIntegerField(default=0)),
                ('xg', models.FloatField(blank=True, help_text='Expected Goals', null=True)),
                ('npxg', models.FloatField(blank=True, help_text='Non-Penalty Expected Goals', null=True)),
                ('xag', models.FloatField(blank=True, help_text='Expected Assisted Goals', null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.league')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('player', 'team', 'season', 'league')},
            },
        ),
        migrations.CreateModel(
            name='PlayerShootingStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_played', models.PositiveIntegerField(default=0)),
                ('starts', models.PositiveIntegerField(default=0)),
                ('minutes_played', models.PositiveIntegerField(default=0)),
                ('shots', models.PositiveIntegerField(default=0)),
                ('shots_on_target', models.PositiveIntegerField(default=0)),
                ('shots_on_target_pct', models.FloatField(blank=True, null=True)),
                ('goals_per_shot', models.FloatField(blank=True, null=True)),
                ('average_shot_distance', models.FloatField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.league')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('player', 'team', 'season', 'league')},
            },
        ),
        migrations.CreateModel(
            name='PlayerPassingStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matches_played', models.PositiveIntegerField(default=0)),
                ('starts', models.PositiveIntegerField(default=0)),
                ('minutes_played', models.PositiveIntegerField(default=0)),
                ('passes_completed', models.PositiveIntegerField(default=0)),
                ('passes_attempted', models.PositiveIntegerField(default=0)),
                ('pass_completion_pct', models.FloatField(blank=True, null=True)),
                ('total_passing_distance', models.PositiveIntegerField(default=0)),
                ('progressive_passing_distance', models.PositiveIntegerField(default=0)),
                ('key_passes', models.PositiveIntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.league')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.player')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.season')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='football_data.team')),
            ],
            options={
                'abstract': False,
                'unique_together': {('player', 'team', 'season', 'league')},
            },
        ),
    ]
